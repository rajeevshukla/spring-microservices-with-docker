<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<parent>
		<groupId>com.springmicroservices</groupId>
		<artifactId>spring-microservices</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>email-service</artifactId>
	<packaging>jar</packaging>

	<name>email-services</name>
	<description>Demo project for Spring Boot</description>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-sleuth-zipkin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
		</dependency>

		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-bus-amqp</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20180130</version>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.20.0</version>
				<configuration>
					<!-- Make sure the current user who is running mvn command has execute 
						permission on docker.sock file -->
					<dockerHost>unix:///var/run/docker.sock</dockerHost>
					<!--<dockerHost>tcp://REMOTE_IP:2375</dockerHost> -->
					<images>
						<image>
							<!-- <name>${project.build.finalName}:${project.version}</name> <alias>${project.build.finalName}</alias> -->

							<name>rajeevshukla/${project.artifactId}:latest</name>
							<alias>${project.artifactId}</alias>
							<build>
								<dockerFileDir>${project.basedir}</dockerFileDir>

							</build>
							<!-- <run> <namingStrategy>alias</namingStrategy> <dependsOn> <container>rabbitmq</container> 
								</dependsOn> <links> <link>rabbitmq</link> </links> <ports> <port>9876:8080</port> 
								</ports> <log> <prefix>TC</prefix> <date>default</date> <color>cyan</color> 
								</log> </run> -->

						</image>
					</images>
				</configuration>

				<executions>
					<execution>
						<id>start</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
					<!-- Uncommment this execution phase if you wan to remove container 
						after testing <execution> <id>clean image</id> <phase>post-integration-test</phase> 
						<goals> <goal>stop</goal> </goals> </execution> -->
				</executions>
			</plugin>


		</plugins>
	</build>
</project>